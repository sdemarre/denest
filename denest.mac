is_sqrt(expr):=is(op(expr)='sqrt);
is_power(expr):=is(op(expr)="^");
is_square(expr):=is_power(expr) and args(expr)[2]=2;
is_sum(expr):=is(op(expr)="+");
is_single_sqrt(expr):=is_sqrt(expr) and length(args(expr))=1;

denest_if_square(expr):=
	if not atom(expr) and is_single_sqrt(expr) and is_square(args(expr)[1]) then
	   args(args(expr)[1])[1]
	else
	   expr;

denest_match_simple(expr):=
	if not atom(expr) and is_single_sqrt(expr) and is_sum(args(expr)[1])
denest(depth,nested_exprs):=block([m,n,N,d,s,DENESTED],
       m:length(nested_exprs),
       if depth = 1 then return(map(denest_if_square,nested_exprs))
       else
       block([a,b,r],
	     [a,b,r] = denest_match_simple(nested_exprs),
	     if all_list_elements_equal(r) then
	     	block([],
		N:makelist(sqrt(a[i]^2-b[i]^2*r[1]),i,1,m))
	     else
	        DENESTED:nested_exprs
       ),
       return(DENESTED));
